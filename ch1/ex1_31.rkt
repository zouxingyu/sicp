#lang sicp
(define (product1 term a next b)
  (if (> a b) 1 (* (term a) (product1 term (next a) next b))))
(define (product2 term a next b)
  (define (iter x result)
    (if (> x b) result (iter (next x) (* result (term x)))))
  (iter a 1))
(define (factorial n) (product1 identity 1 inc n))
(define (identity x) x)
(define (inc x) (+ x 1))
(define (double x) (* x 2))
(define (f1 x) (- (double x) 1))
(define (f2 x) (+ (double x) 1))
(define (f x) (* (/ (double x) (f1 x)) (/ (double x) (f2 x))))
(define (pi n) (* 2 (product1 f 1 inc n)))